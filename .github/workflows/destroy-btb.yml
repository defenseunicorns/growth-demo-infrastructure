name: Destroy BTB Environment

on:
  workflow_dispatch:
    inputs:
      vpc:
        required: true
        type: boolean
      irsa:
        required: true
        type: boolean
      cluster:
        required: true
        type: boolean
      swf:
        required: true
        type: boolean
      bundles:
        required: true
        type: boolean

permissions:
  id-token: write
  contents: read
  packages: read

jobs:
  destroy_bundles:
    runs-on: self-hosted
    if: ${{ inputs.bundles }}
    environment: btb
    steps:
      - uses: actions/checkout@v4

      - name: Setup runner
        shell: bash
        run: uds run setup
        env:
          ENVIRONMENT: btb

      - name: GHCR Login
        run: zarf tools registry login -u "dummy" -p "${{ secrets.GITHUB_TOKEN }}" ghcr.io

      - name: Create the swf bundle
        shell: bash
        run: uds run create-swf
      
      - name: Destroy the swf bundle
        shell: bash
        run: uds run destroy-swf

      - name: Create the base bundle
        shell: bash
        run: uds run create-base
      
      - name: Destroy the base bundle
        shell: bash
        run: uds run destroy-base

      - name: Save logs
        if: always()
        uses: ./.github/actions/save-logs

  destroy_swf:
    needs:
      - destroy_bundles
    runs-on: ubuntu-latest
    if: ${{ ( !cancelled() ) && ( needs.destroy_bundles.result == 'success' || needs.destroy_bundles.result == 'skipped' ) && inputs.swf }}
    environment: btb
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/terraform-destroy
        with:
          environment: btb
          target: swf
        env:
          AWS_GOVCLOUD_ROLE_TO_ASSUME: ${{ secrets.AWS_GOVCLOUD_ROLE_TO_ASSUME }}
          AWS_REGION: ${{ vars.AWS_REGION }}
          PERMISSIONS_BOUNDARY: ${{ vars.PERMISSIONS_BOUNDARY }}
          STATE_BUCKET: ${{ vars.STATE_BUCKET }}
          LOCK_TABLE: ${{ vars.LOCK_TABLE }}

  destroy_cluster:
    needs:
      - destroy_swf
    runs-on: ubuntu-latest
    if: ${{ ( !cancelled() ) && ( needs.destroy_swf.result == 'success' || needs.destroy_swf.result == 'skipped' ) && inputs.cluster }}
    environment: btb
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/terraform-destroy
        with:
          environment: btb
          target: cluster
        env:
          AWS_GOVCLOUD_ROLE_TO_ASSUME: ${{ secrets.AWS_GOVCLOUD_ROLE_TO_ASSUME }}
          AWS_REGION: ${{ vars.AWS_REGION }}
          PERMISSIONS_BOUNDARY: ${{ vars.PERMISSIONS_BOUNDARY }}
          STATE_BUCKET: ${{ vars.STATE_BUCKET }}
          LOCK_TABLE: ${{ vars.LOCK_TABLE }}

  destroy_irsa:
    needs:
      - destroy_cluster
    runs-on: ubuntu-latest
    if: ${{ ( !cancelled() ) && ( needs.destroy_cluster.result == 'success' || needs.destroy_cluster.result == 'skipped' ) && inputs.irsa }}
    environment: btb
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/terraform-destroy
        with:
          environment: btb
          target: irsa
        env:
          AWS_GOVCLOUD_ROLE_TO_ASSUME: ${{ secrets.AWS_GOVCLOUD_ROLE_TO_ASSUME }}
          AWS_REGION: ${{ vars.AWS_REGION }}
          PERMISSIONS_BOUNDARY: ${{ vars.PERMISSIONS_BOUNDARY }}
          STATE_BUCKET: ${{ vars.STATE_BUCKET }}
          LOCK_TABLE: ${{ vars.LOCK_TABLE }}

  destroy_vpc:
    needs:
      - destroy_irsa
    runs-on: ubuntu-latest
    if: ${{ ( !cancelled() ) && ( needs.destroy_irsa.result == 'success' || needs.destroy_irsa.result == 'skipped' ) && inputs.vpc }}
    environment: btb
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/terraform-destroy
        with:
          environment: btb
          target: vpc
        env:
          AWS_GOVCLOUD_ROLE_TO_ASSUME: ${{ secrets.AWS_GOVCLOUD_ROLE_TO_ASSUME }}
          AWS_REGION: ${{ vars.AWS_REGION }}
          PERMISSIONS_BOUNDARY: ${{ vars.PERMISSIONS_BOUNDARY }}
          STATE_BUCKET: ${{ vars.STATE_BUCKET }}
          LOCK_TABLE: ${{ vars.LOCK_TABLE }}
